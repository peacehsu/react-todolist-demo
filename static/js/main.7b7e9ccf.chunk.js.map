{"version":3,"sources":["reducers/todos.js","reducers/visibilityFilter.js","reducers/index.js","actions/index.js","components/Link.js","containers/FilterLink.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","components/TodoList.js","containers/VisibleTodoList.js","App.js","index.js"],"names":["todo","state","action","type","id","text","completed","Object","assign","todos","undefined","map","t","visibilityFilter","filter","todoApp","combineReducers","nextTodoId","Link","active","children","onClick","href","e","preventDefault","FilterLink","connect","ownProps","dispatch","Footer","AddTodo","input","onSubmit","value","trim","ref","node","className","Todo","style","textDecoration","TodoList","onTodoClick","getVisibleTodos","VisibleTodoList","toggleTodo","App","store","createStore","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b7e9ccf.chunk.js","sourcesContent":["const todo = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        return {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      case 'TOGGLE_TODO':\r\n        if (state.id !== action.id) {\r\n          return state\r\n        }\r\n  \r\n        return Object.assign({}, state, {\r\n          completed: !state.completed\r\n        })\r\n  \r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  const todos = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'ADD_TODO':\r\n        return [\r\n          ...state,\r\n          todo(undefined, action)\r\n        ]\r\n      case 'TOGGLE_TODO':\r\n        return state.map(t =>\r\n          todo(t, action)\r\n        )\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default todos","const visibilityFilter = (state = 'SHOW_ALL', action) => {\r\n    switch (action.type) {\r\n      case 'SET_VISIBILITY_FILTER':\r\n        return action.filter\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default visibilityFilter","import { combineReducers } from 'redux'\r\nimport todos from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nconst todoApp = combineReducers({\r\n  todos,\r\n  visibilityFilter\r\n})\r\n\r\nexport default todoApp","let nextTodoId = 0\r\nexport const addTodo = (text) => {\r\n  return {\r\n    type: 'ADD_TODO',\r\n    id: nextTodoId++,\r\n    text\r\n  }\r\n}\r\n\r\nexport const setVisibilityFilter = (filter) => {\r\n  return {\r\n    type: 'SET_VISIBILITY_FILTER',\r\n    filter\r\n  }\r\n}\r\n\r\nexport const toggleTodo = (id) => {\r\n  return {\r\n    type: 'TOGGLE_TODO',\r\n    id\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nconst Link = ({ active, children, onClick }) => {\r\n  if (active) {\r\n    return <span>{children}</span>\r\n  }\r\n\r\n  return (\r\n    <a href=\"#\"\r\n       onClick={e => {\r\n         e.preventDefault()\r\n         onClick()\r\n       }}\r\n    >\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nLink.propTypes = {\r\n  active: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../components/Link'\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    active: ownProps.filter === state.visibilityFilter\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onClick: () => {\r\n      dispatch(setVisibilityFilter(ownProps.filter))\r\n    }\r\n  }\r\n}\r\n\r\nconst FilterLink = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link)\r\n\r\nexport default FilterLink","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\n\r\nconst Footer = () => (\r\n  <p>\r\n    顯示:\r\n    {\" \"}\r\n    <FilterLink filter=\"SHOW_ALL\">\r\n      全部\r\n    </FilterLink>\r\n    {\", \"}\r\n    <FilterLink filter=\"SHOW_ACTIVE\">\r\n      處理中\r\n    </FilterLink>\r\n    {\", \"}\r\n    <FilterLink filter=\"SHOW_COMPLETED\">\r\n      已完成\r\n    </FilterLink>\r\n  </p>\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addTodo } from '../actions'\r\n\r\nlet AddTodo = ({ dispatch }) => {\r\n  let input\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={e => {\r\n        e.preventDefault()\r\n        if (!input.value.trim()) {\r\n          return\r\n        }\r\n        dispatch(addTodo(input.value))\r\n        input.value = ''\r\n      }}>\r\n        <input ref={node => {\r\n          input = node\r\n        }} />\r\n        <button className=\"btn btn-primary\" type=\"submit\">\r\n          新增待辦\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\nAddTodo = connect()(AddTodo)\r\n\r\nexport default AddTodo","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Todo = ({ onClick, completed, text }) => (\r\n  <div className=\"todoWrapper\">\r\n    <li \r\n        onClick={onClick}\r\n        style={{\r\n        textDecoration: completed ? 'line-through' : 'none'\r\n        }}\r\n    >{text}\r\n    </li>\r\n  </div>\r\n)\r\n\r\nTodo.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  completed: PropTypes.bool.isRequired,\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TodoList = ({ todos, onTodoClick }) => (\r\n  <ul>\r\n    {todos.map(todo =>\r\n      <Todo\r\n        key={todo.id}\r\n        {...todo}\r\n        onClick={() => onTodoClick(todo.id)}\r\n      />\r\n    )}\r\n  </ul>\r\n)\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    completed: PropTypes.bool.isRequired,\r\n    text: PropTypes.string.isRequired\r\n  }).isRequired).isRequired,\r\n  onTodoClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList","import { connect } from 'react-redux'\r\nimport { toggleTodo } from '../actions'\r\nimport TodoList from '../components/TodoList'\r\n\r\nconst getVisibleTodos = (todos, filter) => {\r\n  switch (filter) {\r\n    case 'SHOW_ALL':\r\n      return todos\r\n    case 'SHOW_COMPLETED':\r\n      return todos.filter(t => t.completed)\r\n    case 'SHOW_ACTIVE':\r\n      return todos.filter(t => !t.completed)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: getVisibleTodos(state.todos, state.visibilityFilter)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onTodoClick: (id) => {\r\n      dispatch(toggleTodo(id))\r\n    }\r\n  }\r\n}\r\n\r\nconst VisibleTodoList = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList)\r\n\r\nexport default VisibleTodoList","import React from 'react'\r\nimport Footer from './components/Footer'\r\nimport AddTodo from './containers/AddTodo'\r\nimport VisibleTodoList from './containers/VisibleTodoList'\r\nimport \"./App.css\";\r\n\r\nconst App = () => (\r\n  <div className=\"todo-wrapper\">\r\n    <div className=\"title\">\r\n      React Todo List\r\n    </div>\r\n    <AddTodo />\r\n    <VisibleTodoList />\r\n    <Footer />\r\n  </div>\r\n)\r\n\r\nexport default App","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport todoApp from './reducers'\r\nimport App from './App'\r\n\r\nlet store = createStore(todoApp)\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}